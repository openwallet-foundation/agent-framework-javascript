name: Continuous Integration

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, labeled]
  push:
    branches: [main]
  workflow_dispatch:

env:
  TEST_AGENT_PUBLIC_DID_SEED: 000000000000000000000000Trustee9
  GENESIS_TXN_PATH: network/genesis/local-genesis.txn
  LIB_INDY_STRG_POSTGRES: /home/runner/work/aries-framework-javascript/indy-sdk/experimental/plugins/postgres_storage/target/release # for Linux

# Make sure we're not running multiple release steps at the same time as this can give issues with determining the next npm version to release.
# Ideally we only add this to the 'release' job so it doesn't limit PR runs, but github can't guarantee the job order in that case:
# "When concurrency is specified at the job level, order is not guaranteed for jobs or runs that queue within 5 minutes of each other."
concurrency:
  group: aries-framework-${{ github.ref }}-${{ github.repository }}-${{ github.event_name }}
  cancel-in-progress: true

jobs:
  # PRs created by github actions won't trigger CI. Before we can merge a PR we need to run the tests and
  # validation scripts. To still be able to run the CI we can manually trigger it by adding the 'ci-test'
  # label to the pull request
  ci-trigger:
    runs-on: ubuntu-20.04
    outputs:
      triggered: ${{ steps.check.outputs.triggered }}
    steps:
      - name: Determine if CI should run
        id: check
        run: |
          if [[ "${{ github.event.action }}" == "labeled" && "${{ github.event.label.name }}" == "ci-test" ]]; then
              export SHOULD_RUN='true'
          elif [[ "${{ github.event.action }}" == "labeled" && "${{ github.event.label.name }}" != "ci-test" ]]; then
              export SHOULD_RUN='false'
          else 
              export SHOULD_RUN='true'
          fi

          echo "SHOULD_RUN: ${SHOULD_RUN}"
          echo "::set-output name=triggered::${SHOULD_RUN}"

  validate:
    runs-on: ubuntu-20.04
    name: Validate
    steps:
      - name: Checkout aries-framework-javascript
        uses: actions/checkout@v2

      # setup dependencies
      - name: Setup Libindy
        uses: ./.github/actions/setup-libindy

      - name: Setup NodeJS
        uses: ./.github/actions/setup-node
        with:
          node-version: 16

      - name: Install dependencies
        run: yarn install

      - name: Linting
        run: yarn lint

      - name: Prettier
        run: yarn check-format

      - name: Check Types
        run: yarn check-types

      - name: Compile
        run: yarn build

  integration-test:
    runs-on: ubuntu-20.04
    name: Integration Tests

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x, 17.x, 18.x]

    steps:
      - name: Checkout aries-framework-javascript
        uses: actions/checkout@v2

      # setup dependencies
      - name: Setup Libindy
        uses: ./.github/actions/setup-libindy
      - name: Setup Indy Pool
        uses: ./.github/actions/setup-indy-pool
        with:
          seed: ${TEST_AGENT_PUBLIC_DID_SEED}

      - name: Setup Postgres
        uses: ./.github/actions/setup-postgres

      - name: Setup Postgres wallet plugin
        uses: ./.github/actions/setup-postgres-wallet-plugin

      - name: Setup NodeJS
        uses: ./.github/actions/setup-node
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install

      - name: Run tests
        run: TEST_AGENT_PUBLIC_DID_SEED=${TEST_AGENT_PUBLIC_DID_SEED} GENESIS_TXN_PATH=${GENESIS_TXN_PATH} yarn test --coverage

      - uses: codecov/codecov-action@v1
        if: always()

  version-stable:
    runs-on: ubuntu-20.04
    name: Release stable
    needs: [integration-test, validate]
    if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout aries-framework-javascript
        uses: actions/checkout@v2
        with:
          # pulls all commits (needed for lerna to correctly version)
          fetch-depth: 0

      # setup dependencies
      - name: Setup Libindy
        uses: ./.github/actions/setup-libindy

      - name: Setup NodeJS
        uses: ./.github/actions/setup-node
        with:
          node-version: 16

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Git config
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Update version
        run: yarn lerna version --conventional-commits --no-git-tag-version --no-push --yes --exact

      - name: Format lerna changes
        run: yarn format

      - name: Get updated version
        id: new-version
        run: |
          NEW_VERSION=$(node -p "require('./lerna.json').version")
          echo $NEW_VERSION

          echo "::set-output name=version::$NEW_VERSION"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: |
            chore(release): v${{ steps.new-version.outputs.version }}
          author: 'github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>'
          committer: 'github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>'
          branch: lerna-release
          signoff: true
          title: |
            chore(release): v${{ steps.new-version.outputs.version }}
          body: |
            Release version ${{ steps.new-version.outputs.version }}
